# Generated by Django 2.0.7 on 2018-07-31 15:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='标题')),
                ('body', tinymce.models.HTMLField(max_length=5000, verbose_name='正文')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('last_modified_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('status', models.CharField(choices=[('d', '草稿'), ('p', '发布')], max_length=1, verbose_name='文章状态')),
                ('views', models.PositiveIntegerField(default=0, editable=False, verbose_name='浏览量')),
                ('likes', models.PositiveIntegerField(default=0, editable=False, verbose_name='点赞数')),
                ('news_img', models.ImageField(null=True, upload_to='', verbose_name='文章展示图片')),
            ],
            options={
                'verbose_name': '文章',
                'verbose_name_plural': '文章',
                'db_table': 'blog_article',
                'ordering': ['-created_time'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='附件名')),
                ('upload_time', models.DateTimeField(auto_now_add=True, verbose_name='上传时间')),
                ('download_times', models.PositiveIntegerField(default=0, editable=False, verbose_name='下载次数')),
            ],
            options={
                'verbose_name': '附件',
                'verbose_name_plural': '附件',
                'db_table': 'blog_attachment',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='类别')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('last_modified_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('description', models.CharField(max_length=200, null=True, verbose_name='说明')),
            ],
            options={
                'verbose_name': '类别',
                'verbose_name_plural': '类别',
                'db_table': 'blog_category',
                'ordering': ['id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=20, verbose_name='评论者名字')),
                ('user_email', models.EmailField(max_length=100, verbose_name='评论者邮箱')),
                ('body', tinymce.models.HTMLField(verbose_name='评论内容')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='评论发表时间')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Article', verbose_name='评论所属文章')),
            ],
            options={
                'verbose_name': '评论',
                'verbose_name_plural': '评论',
                'db_table': 'blog_comment',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GlobalConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_title', models.CharField(max_length=10, verbose_name='网站名称')),
                ('signature', models.CharField(max_length=10, verbose_name='网站签名')),
                ('copyright', models.CharField(max_length=10, verbose_name='网站版权')),
                ('address', models.CharField(max_length=30, verbose_name='地址')),
                ('icp', models.CharField(max_length=20, verbose_name='ICP认证')),
            ],
            options={
                'verbose_name': '网站全局配置',
                'verbose_name_plural': '网站全局配置',
                'db_table': 'config_global',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about', tinymce.models.HTMLField(verbose_name='站长介绍')),
                ('qq', models.CharField(max_length=20, null=True, verbose_name='qq')),
                ('toutiao', models.CharField(max_length=20, null=True, verbose_name='头条号')),
                ('github', models.CharField(max_length=20, null=True, verbose_name='github')),
                ('location', models.CharField(max_length=200, null=True, verbose_name='地址')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='作者')),
            ],
            options={
                'verbose_name': '作者',
                'verbose_name_plural': '作者',
                'db_table': 'account_owner',
            },
        ),
        migrations.AddField(
            model_name='article',
            name='attachment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.Attachment', verbose_name='附件'),
        ),
        migrations.AddField(
            model_name='article',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='blog.Category', verbose_name='分类'),
        ),
    ]
